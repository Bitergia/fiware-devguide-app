# Copyright 2014 Bitergium SLL
# 

#=============================================
# To be put in APACHE_FLUME_HOME/conf/cygnus.conf
#
# General configuration template explaining how to setup a sink of each of the available types (HDFS, CKAN, MySQL).

#=============================================
# The next tree fields set the sources, sinks and channels used by Cygnus. You could use different names than the
# ones suggested below, but in that case make sure you keep coherence in properties names along the configuration file.
# Regarding sinks, you can use multiple types at the same time; the only requirement is to provide a channel for each
# one of them (this example shows how to configure 3 sink types at the same time). Even, you can define more than one
# sink of the same type and sharing the channel in order to improve the performance (this is like having
# multi-threading).
#
# FIWARE Devguide: 
# - Three sources, one for temperatures, one for humidity and one for occupancy levels
# - Sinks to CKAN, HDFS and MySQL the events

cygnusagent.sources = http-source-temp http-source-humidity http-source-occupancy
cygnusagent.sinks = ckan-sink-temp ckan-sink-humidity ckan-sink-occupancy hdfs-sink
cygnusagent.channels = ckan-channel-temp ckan-channel-humidity ckan-channel-occupancy hdfs-channel

###
#  TO BE FILLED MANUALLY: Don't modify outside here

# CKAN API key: the same for both
cygnusagent.sinks.ckan-sink-temp.api_key = 
cygnusagent.sinks.ckan-sink-humidity.api_key = 
cygnusagent.sinks.ckan-sink-occupancy.api_key = 
# Account in https://cosmos.lab.fiware.org/ allowed to write in HDFS
cygnusagent.sinks.hdfs-sink.hdfs_username = 
cygnusagent.sinks.hdfs-sink.hdfs_password = 
# Follow http://stackoverflow.com/questions/31187977/oauth2-access-to-cosmos-webhdfs-in-fiware-lab
cygnusagent.sinks.hdfs-sink.oauth2_token = 

#  END TO BE FILLED MANUALLY
###
#=============================================
# source configuration: Temperature
# channel name where to write the notification events
cygnusagent.sources.http-source-temp.channels = ckan-channel-temp hdfs-channel
# cygnusagent.sources.http-source-temp.channels = hdfs-channel
# source class, must not be changed
cygnusagent.sources.http-source-temp.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source-temp.port = 5001
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source-temp.handler = com.telefonica.iot.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source-temp.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source-temp.handler.default_service = restaurants
cygnusagent.sources.http-source-temp.handler.default_service_path = temperature
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source-temp.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source-temp.handler.management_port = 5011
# Source interceptors, do not change
cygnusagent.sources.http-source-temp.interceptors = ts gi
# Timestamp interceptor, do not change
cygnusagent.sources.http-source-temp.interceptors.ts.type = timestamp
# GroupinInterceptor, do not change
cygnusagent.sources.http-source-temp.interceptors.gi.type = com.telefonica.iot.cygnus.interceptors.GroupingInterceptor$Builder
# Grouping rules for the GroupingInterceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source-temp.interceptors.gi.grouping_rules_conf_file = /usr/cygnus/conf/grouping_rules.conf

#=============================================
# source configuration: Humidity
# channel name where to write the notification events
cygnusagent.sources.http-source-humidity.channels = ckan-channel-humidity hdfs-channel
# source class, must not be changed
cygnusagent.sources.http-source-humidity.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source-humidity.port = 5002
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source-humidity.handler = com.telefonica.iot.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source-humidity.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source-humidity.handler.default_service = restaurants
cygnusagent.sources.http-source-humidity.handler.default_service_path = humidity
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source-humidity.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source-humidity.handler.management_port = 5012
# Source interceptors, do not change
cygnusagent.sources.http-source-humidity.interceptors = ts gi
# Timestamp interceptor, do not change
cygnusagent.sources.http-source-humidity.interceptors.ts.type = timestamp
# GroupinInterceptor, do not change
cygnusagent.sources.http-source-humidity.interceptors.gi.type = com.telefonica.iot.cygnus.interceptors.GroupingInterceptor$Builder
# Grouping rules for the GroupingInterceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source-humidity.interceptors.gi.grouping_rules_conf_file = /usr/cygnus/conf/grouping_rules.conf

#=============================================
# source configuration: Occupancy levels
# channel name where to write the notification events
cygnusagent.sources.http-source-occupancy.channels = ckan-channel-occupancy hdfs-channel
# cygnusagent.sources.http-source-occupancy.channels = hdfs-channel
# source class, must not be changed
cygnusagent.sources.http-source-occupancy.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source-occupancy.port = 5003
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source-occupancy.handler = com.telefonica.iot.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source-occupancy.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source-occupancy.handler.default_service = restaurants
cygnusagent.sources.http-source-occupancy.handler.default_service_path = occupancy
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source-occupancy.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source-occupancy.handler.management_port = 5013
# Source interceptors, do not change
cygnusagent.sources.http-source-occupancy.interceptors = ts gi
# Timestamp interceptor, do not change
cygnusagent.sources.http-source-occupancy.interceptors.ts.type = timestamp
# GroupinInterceptor, do not change
cygnusagent.sources.http-source-occupancy.interceptors.gi.type = com.telefonica.iot.cygnus.interceptors.GroupingInterceptor$Builder
# Grouping rules for the GroupingInterceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source-occupancy.interceptors.gi.grouping_rules_conf_file = /usr/cygnus/conf/grouping_rules.conf

# ============================================
# OrionCKANSink configuration: temp
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink-temp.channel = ckan-channel-temp
# sink class, must not be changed
cygnusagent.sinks.ckan-sink-temp.type = com.telefonica.iot.cygnus.sinks.OrionCKANSink
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-temp.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-temp.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
# cygnusagent.sinks.ckan-sink-temp.default_dataset = room_temperature
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink-temp.orion_url = http://orion:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink-temp.attr_persistence = row

# ============================================
# OrionCKANSink configuration: humidity
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink-humidity.channel = ckan-channel-humidity
# sink class, must not be changed
cygnusagent.sinks.ckan-sink-humidity.type = com.telefonica.iot.cygnus.sinks.OrionCKANSink
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-humidity.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-humidity.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
cygnusagent.sinks.ckan-sink-humidity.default_dataset = room_humidity
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink-humidity.orion_url = http://orion:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink-humidity.attr_persistence = row

# ============================================
# OrionCKANSink configuration: occupancy
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink-occupancy.channel = ckan-channel-occupancy
# sink class, must not be changed
cygnusagent.sinks.ckan-sink-occupancy.type = com.telefonica.iot.cygnus.sinks.OrionCKANSink
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-occupancy.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-occupancy.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
# cygnusagent.sinks.ckan-sink-occupancy.default_dataset = restaurant_occupancy
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink-occupancy.orion_url = http://orion:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink-occupancy.attr_persistence = row

# ============================================
# OrionHDFSSink configuration
# channel name from where to read notification events
cygnusagent.sinks.hdfs-sink.channel = hdfs-channel
# sink class, must not be changed
cygnusagent.sinks.hdfs-sink.type = com.telefonica.iot.cygnus.sinks.OrionHDFSSink
# true if the grouping feature is enabled for this sink, false otherwise
cygnusagent.sinks.hdfs-sink.enable_grouping = false
# Comma-separated list of FQDN/IP address regarding the HDFS Namenode endpoints
# If you are using Kerberos authentication, then the usage of FQDNs instead of IP addresses is mandatory
cygnusagent.sinks.hdfs-sink.hdfs_host = cosmos.lab.fiware.org
# port of the HDFS service listening for persistence operations; 14000 for httpfs, 50070 for webhdfs
cygnusagent.sinks.hdfs-sink.hdfs_port = 14000
# how the attributes are stored, available formats are json-row, json-column, csv-row and csv-column
cygnusagent.sinks.hdfs-sink.file_format = json-column
# Hive server version (1 or 2)
cygnusagent.sinks.hdfs-sink.hive_server_version = 2
# Hive FQDN/IP address of the Hive server
cygnusagent.sinks.hdfs-sink.hive_host = cosmos.lab.fiware.org
# Hive port for Hive external table provisioning
cygnusagent.sinks.hdfs-sink.hive_port = 10000
# Kerberos-based authentication enabling
cygnusagent.sinks.hdfs-sink.krb5_auth = false
# Batch processing, improves the performace a lot
agentname.sinks.hdfs-sink.batch_size=100
agentname.sinks.hdfs-sink.batch_timeout=30
# agentname.sinks.hdfs-sink.batch_timeout=1

#=============================================
# ckan-channel configuration: temperatures
# channel type (must not be changed)
cygnusagent.channels.ckan-channel-temp.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel-temp.capacity = 10000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel-temp.transactionCapacity = 1000

#=============================================
# ckan-channel configuration: humidity
# channel type (must not be changed)
cygnusagent.channels.ckan-channel-humidity.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel-humidity.capacity = 10000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel-humidity.transactionCapacity = 1000

#=============================================
# ckan-channel configuration: occupancy
# channel type (must not be changed)
cygnusagent.channels.ckan-channel-occupancy.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel-occupancy.capacity = 10000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel-occupancy.transactionCapacity = 1000

#=============================================
# ckan-channel configuration: HDFS
# channel type (must not be changed)
cygnusagent.channels.hdfs-channel.type = memory
# capacity of the channel
cygnusagent.channels.hdfs-channel.capacity = 10000
# amount of bytes that can be sent per transaction
cygnusagent.channels.hdfs-channel.transactionCapacity = 1000
